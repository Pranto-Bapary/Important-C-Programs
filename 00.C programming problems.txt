Some C programming problems:
----------------------------------------
----------------------------------------

-> take two numbers as input and add them
-> take two numbers as input (float type), divide first number by the second number and show the result
-> findout fahrenheit to celsius, celsius to fahrenheit
-> take input of height, width and length and findout volume of a box
-> take length and width to find out area of a rectangle
-> findout out square of a number
-> take two numbers as input divide them and find out quotient and remainder 
-> findout reverse of a 3 digit number without using loop
-> findout the sum of digits of a number (2 digits or 3 digits)
-> Swap two variables

-> take a number as input and find if it is even or odd
-> take a number as input and check if it is positive or negative
-> Find factorial of a number
-> GCD,LCM of two numbers
-> check a year is leap year or not
-> power of a number, square of a number
-> calculate grade from given number

-> separte the odd and even numbers from an array and put it in other arrays called odd and even
-> separte the prime numbers from array
-> print fibonacci series using array
-> sum of number in fibonacci series until nth position 
-> findout a number is Armstrong number or not  
-> finout sum of the numbers in an array
-> findout largest, smallest, average number in an array
-> count even numbers or odd numbers in an array
-> reverse of an array
-> find prime numbers from 1 to n
-> check a number is palindrom or not
-> find decimal to octal, octal to decimal
-> find nCr, nPr for given value of n & r
-> copy elements of an array to another array
-> practice printing patterns given at the end of this file.


----------------
pattern printing
----------------
-> take input n from user, then print the following patterns:

1) [n=5]
*
**
***
****
*****

2) [n=5]
*****
*****
*****
*****
*****

3) [n=5]

  *
 * *
*   *
 * *
  *

4)  [n=4]

****
***
**
*

5) [n=3]

  *
 ***
*****

6) [n=5]

    *
   **
  ***
 ****
*****

7) [n=5]

1
12
123
1234
12345



8) [n=3]

    1
  2 1 2
3 2 1 2 3








